name: learnsmate-service

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: LearnsMate
        shell: bash

      - name: Install envsubst
        run: sudo apt-get install -y gettext

      - name: Generate application.yml.template
        working-directory: LearnsMate
        run: |
          mkdir -p src/main/resources
          cat > src/main/resources/application.yml.template <<EOL
          server:
            port: 5000
          
          management:
            endpoints:
              web:
                exposure:
                  include: health
            endpoint:
              health:
                show-details: always
          
          spring:
            application:
              name: learnsmate
            datasource:
              driver-class-name: org.mariadb.jdbc.Driver
              url: jdbc:mariadb://\${RDS_HOSTNAME}:\${RDS_PORT}/\${RDS_DB_NAME}
              username: \${RDS_USERNAME}
              password: \${RDS_PASSWORD}
          
            jpa:
              generate-ddl: false
              show-sql: true
              database: mysql
              properties:
                hibernate:
                  '[format_sql]': true
            
            mail:
              host: \${SPRING_MAIL_SMTP_HOST}
              username: \${SMTP_USERNAME}
              password: \${SMTP_PASSWORD}
              port: \${SMTP_PORT}
              properties:
                mail:
                  smtp:
                    auth: true
                    starttls:
                      enable: true
                      required: true
          
            data:
              redis:
                cluster: 
                  nodes: \${REDIS_HOST}:6379
                  max-redirects: 3
                
          
          coolsms:
            api:
              key: \${COOL_SMS_API_KEY}
              secret: \${COOL_SMS_API_SECRET}
              base-url: \${COOL_SMS_API_BASE_URL}
          
          openai:
            model: gpt-4o
            secret-key: \${SECRET_KEY}

          token:
            expiration_time: 6000
            secret: \${TOKEN_SECRET}
          EOL

      - name: Set application.yml with Secrets
        working-directory: LearnsMate
        run: |
          envsubst < src/main/resources/application.yml.template > src/main/resources/application.yml
          echo "Generated application.yml:"
          cat src/main/resources/application.yml
        env:
          RDS_HOSTNAME: ${{ secrets.RDS_HOSTNAME }}
          RDS_PORT: ${{ secrets.RDS_PORT }}
          RDS_DB_NAME: ${{ secrets.RDS_DB_NAME }}
          RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TOKEN_SECRET: ${{ secrets.JWT_SECRET }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SPRING_MAIL_SMTP_HOST: ${{ secrets.SPRING_MAIL_SMTP_HOST }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          COOL_SMS_API_KEY : ${{ secrets.COOL_SMS_API_KEY }}
          COOL_SMS_API_SECRET : ${{ secrets.COOL_SMS_API_SECRET }}
          COOL_SMS_API_BASE_URL : ${{ secrets.COOL_SMS_API_BASE_URL }}

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        working-directory: LearnsMate
        shell: bash

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
        shell: bash

      - name: Generate deployment package
        working-directory: LearnsMate
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .

      - name: Deploy to Beanstalk1
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: intbyte-env
          environment_name: Intbyte-env
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: LearnsMate/deploy/deploy.zip
          use_existing_version_if_available: false
          wait_for_deployment: true
          wait_for_environment_recovery: 300

      - name: Deploy to Beanstalk2
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: intbyte-env2
          environment_name: Intbyte-env2
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: LearnsMate/deploy/deploy.zip
          use_existing_version_if_available: false
          wait_for_deployment: true
          wait_for_environment_recovery: 300
